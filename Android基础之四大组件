Android基础篇

1、Android支持的五种基本布局：

LinearLayout、RelativeLayout 、FrameLayout、TableLayout、AbsoluteLayout 都是viewGroup的子类。

2、Activity生命周期：

    启动Activity: onCreate()—>onStart()—>onResume()，Activity进入运行状态。

    Activity退居后台: 当前Activity转到新的Activity界面或按Home键回到主屏： onPause()—>onStop()，进入停滞状态。

    Activity返回前台: onRestart()—>onStart()—>onResume()，再次回到运行状态。

    Activity退居后台，且系统内存不足， 系统会杀死这个后台状态的Activity（此时这个Activity引用仍然处在任务栈中，
    只是这个时候引用指向的对象已经为null），若再次回到这个Activity,则会走onCreate()–>onStart()—>onResume()
    (将重新走一次Activity的初始化生命周期)

    锁屏：onPause()->onStop()

    解锁：onStart()->onResume()

3、Activity启动方式：

android:launchMode="standard|singleInstance|singleTask|singleTop"来控制Acivity任务栈。
避免重复点击：利用singleTask启动方式
主界面启动方式：singleTop,当返回到主界面时可以直接退出。

4、界面异常退出保存状态：

当某个activity变得“容易”被系统销毁时，该activity的onSaveInstanceState就会被执行，除非该activity是被用户主动销毁的，例如当用户按BACK键的时候。 
由于onSaveInstanceState()方法调用的不确定性，你应该只使用这个方法去记录activity的瞬间状态（UI的状态）。不应该用这个方法去存储持久化数据。
当用户离开这个activity的时候应该在onPause()方法中存储持久化数据（例如应该被存储到数据库中的数据）。

onSaveInstanceState()如果被调用，这个方法会在onStop()前被触发，但系统并不保证是否在onPause()之前或者之后触发。

恢复出保存的状态：onRestoreInstanceState

onRestoreInstanceState的bundle参数也会传递到onCreate方法中，你也可选择在onCreate方法中做数据还原。onRestoreInstanceState在onstart之后执行。

5、广播(Broadcast Receiver)的两种动态注册和静态注册有什么区别。

    静态注册：在AndroidManifest.xml文件中进行注册，当App退出后，Receiver仍然可以接收到广播并且进行相应的处理

    动态注册：在代码中动态注册，当App退出后，也就没办法再接受广播了。
    生命周期：生成 --> 注册 --> onReceive()-->取消注册.
    　一般：在onStart中注册，onStop中取消unregisterReceiver
     
